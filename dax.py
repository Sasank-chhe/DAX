# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Feb  6 13:20:54 2022
# d------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'==QKpciWYhGbZl3ZvhVer9WWpR2dhNDbLl1VodUWY50cW1mV19UVkhlTYFVeZxGczJVMwFjUsp1VUNjQyZ1MkplUWpUVaVkWhFFMadEVY1UMWFjVX50V0RVWVpUcVtmVP1kVaJ3UsZlVkNDZ0lFbKdlYGJFTjVkWOJVMJdnVWh2UiZlRTF1aSlGZVp1VWtWO31kRWVTYyAnVVtmSFpFSsdnUrFDUkdEdaVmVGhUVsJ1SSdkUxIlaG5UUzIkVW5Gba1UVxAlVthXVjBjW0V1a0FWTGZlWWxmWPVFMwVVVq50SWFjS2NmRkp1VGpESWx2b4JlMWVVTXRnTUtmWFZlbSdlVGJ1cjVEZpdVVadEVUJ0SXZEbXRmRk9EVsBncWZVS1IlVaRkVsZ1VThEa0p1V4FmUt1UMUxmWXR1MCJ3VYZ0VW1mVh5UVkl2Yr9GeZhlTD1UMsVDZyEDah5mUIllbkdlUspUeadUNXJFMaZFVrVzVhFjVMNWRa5kUxk0dWZFa0I2VWN1UtBnVOZlWHZ1a5QjUWBnWTxmWPdFRGhEV6F0dSdlSzMFbSFmUxoESVxmULJ1RSNDVqZ0VNdUT6Z1aaRjYVVDUV1GeUNWR1QXVrB3dNFjWWdlaCRlVHJlcWRVSwEWMaJXYHFDWlZEbHVVMwNlYGZURWpmSXVFMwV1Vrp1UWJjRyVWRkp2UVVzRWxGZTFGbWRTUWhmThZlSyVlM5cnUrFDWRxGaYRGWBhXWx40ShxmV28kRWdVYzIkVXhFbuNlROFWTVRGahVEcYl1a0t2UGBnRORlQUlVV1EnVGx2aNZVWwQFbWVVZUF1dZFjUwImVS5UVtFzUZdFayZFMsNUTy40TT1GcVVmRGdkVrlzcNxmVwI2RwlmVVBXRaZlQP1kVKxEVq5kWSFDcGZ1RsdUYspUYiVkWXVlMSNnVuNGMSZlUvN1aSl2UxoFWW1mRv1kVaFjTUJUVhZlWHllaJhXYxokcSxGZVJFbaVlVyY0bNdlS0YFVKdFVwAXcXVFaTJVMKFnVrZVaNVVMzlFWOtmYGZVNTRlRpRFbaNnVrR3RSFjTyFmRWhFZHdmeZZlTwIlMKZDVthHaRNDa0dFWKFmVVVTYaVkWodVRwNHVVlTYhxmWwIVbwRVYYJUdVZFbrJ2RGR0TUJ0VTZEczR1a58mUtpEeVxGZp5ERWhlVUp1diZkTTFFbS9EZ6ZkcVxmTHJFbvJTZFRGVWdkUXRFWwtkYFFDTUpmTaJVMwZkVHtGeSJjUXpVRahVVwoUcW5Ga6JFMxQ1YHFjUUxmSIVlbKNXTxolWX1GesRlaGRXVzwmTS1mSyJFbkp1YuJ0RaZ0ZxYVMjdnUWR2VOZFbVZFWK9WTtZ0TaVkVoNVV1ckVxQ2aiZkV140R05EVth2RZ1GaHJWVxU3YE5kVkdEa2olRkdUZtlkeVtmWpJ2Moh1VuZUYWtWNhRVbwhVZuJ0RUVVOrJGbkNjTGZFahhkQIllaCdnVsp0MX1WNYRmM0VUWxY1aS1mTM9UVWdVUxolVWNDc21kVG92VrplaNFjW0VVb0dUTsZVNVVFaqZlRKNnVrJ1SN1WRwcFbSFmUYJkVZdFd0ImVOtEVrpFWWxmWxZFWsZVTHJFcWtmVoNWVZlnVtR3UWxGZwEGROZFVrBXVWhEaSZVbJhXTGZVYjhFaIZVMKNkUHJVNStmWO1ESClkVuZ0dWdlRP1UVkxGZVp1cadlR3ZlVsdlUrJlaUxGcyZlVKNlYXZlehRkQWdVRaZTWx40ShxmT2QVbxMlUzgmcXhlUTdlRalVYHhnVkFDbXRFWKNUYsZFeTxmVVFWMJdXWUZ1aSxGZYNmRoVFZIJkcUZlU0IVMw9mUqpEaZZVS6ZlbWNnUrVzbWxmWQ10aVhXWXlDMWFjUJFWRkRlVHh2cWxGaLJWRxA1UsJVVXhFaYd1VotUZs9mMUxmWp50ROVnVudGNN1mUWVWRkh2YxoFdZZFZXZlRkZjY6ZkaZVlSxZFRO9UTWpleNRlSU5EbwdlWHZ0cN1mT000R05EVxAXcW5mR3FWMk9WZGRGWOx2b4ZFWwdUYsxGMidEeqRlMSdFVuJ1dStWMIVlaCZ1VGpEdVJDeXJVbRhXVsR2UUNTU5dFWOdVYyYVVU1GcXRGMVlnVrRXYXZkWZZFbShWYsplRZBDczJ1axMzVsh2VWxmSZplROFmUsB3dSxGZTRmbCllVzUFeWVVNPVWRklGZUZkVV1GdHZVMwh0YGZFVWdkUHpFVOtWTWpESS1GcWNGbKhUWXhGNiZFZaJmRalWY6V1dWVFaLJWR1gVZFRWYjxmW0VVbGN1VGRWNVdVMWJGRGRnVIR2RNdlRQJGRKpFZykzRVJjRv10RKRzVXhnTSpnVIZFbatkYHZUcWxmVU50a1cVWqJlaixmW08ERKtmVYhGSZhlTXJ2VGhlVsJFWl1GO4llMGNUYsFleiZkWOR1MCd0Vrp1dS1mUhRVbwhVTEJkVZtGdHdlRWpnTWZFahVkSxZFMwdXTWpkcX1GeadlRvhnWFlTYSxGcoN1ak5UTXNGeW5mVL1kVGNnWGpVVNFjSHlVb5ckVxI1VjZkWYdFRWhUWrJ1RStGM4dFWwZ1YspEdVJjRPJlRwpkYGpVaiBTNXZFSrBjVVFDcWtmVhNVMahlVrR2cWxGZaVlaKhWVrpURahEZa10VGJHZGRWYkdkU1plVw9UYspFUNdFdON1MSJ3VYhmWSZlUw10VxU1VtdHeW12cx0kRWlUTXRHbWNDaIdVb4ETTGlEMhZkVYVmVGRnVXtGeiZlTyU1aalWYycWeXhFZ2ZlVOF2YHVzUVdkUXVlaRVjVxYFeORlQolVVaVlVqp1cidkVERFbWZVZXljcaZlTwIVMwlnVtFDaWJDaXZVMoNlYXZ0TNdVMTVWb5cVVrlDNSZFcINWRaRVWXhmRZNzb4FGMxAlUrJ1VWRlVWllVRhnVwkDVU1GeO1UVrpnVrp1bi1mSTd1aahWWWpESVxGZv1kRWllYIBXVUtGcxZFSopVTXZkcjVEZhNmbCZUVs9WMiZlUJNVb45UVxAXcWZEZTJlMGh2UsJVVOdFeHZlM0BjVxY1MVVFaOZ1MSh0Vup0VWJTS6NmRohVZsx2cWVUNLFGbO10UsRmTSNDaydFWKFmVWRWYhVkWhJlRadFVYR2SixmVwIVbwhWYYJFdVFDc3JFbONlWGhmVkNDZ0p1V4FmUWBHaNZlVT1kVWllVzY1SNZkRzZFba5UZrxGWV1Gd3JmVsBTVrR2VXpmRIplVRhXYwEzTStmUXRmRaVlVHh3dSJjSaJ1aa5UTFBXWXxmWD1EMxAnVrZVYjhlQXRlVk9WTGpFMhRkSUR1aaVUWzAnWS1mS21UVWFmUsBnRVx2bxImVSl0UthnTVFDcxZlRkNlUyYEaRtmUpJVb3hHVV50TWZlUzE1V1sGVsBnRX12Z4ZlVJhXYygHWXRFbYR1V4tmYGJVNTRlSTFWMJd3VVdWMSZlSVpVRaxWTyEFeVtGZHFGbWlXVrRGahhEa0ZVMsNnVtpkcU1GcWV2V4cXWsp1diZlU4VlaKdlTHd2dWZFbT1UbOR1UtBXVNhlQXRVV5MnYWxGSidEdsdlbCVnVsJ0SN1WRwclbwVlVxoESVxmULJ1RRhHVWpVahBDcXZFSrBTTH5EWlVEZoNWVwhVVuR2cNZkVa5UVW9kVwolNZRlTTZVbJhXY6pkWS5mQGVFbw9UYsZURNVlVORWMwllVFR2UWFDbPZFbW90VuJ0RWNjWHZlRwllTXRnThdlUGd1aW9UTspEUVpmQWdFVVdnVWR2QSdkV2Q1aalWYzIFWWVEZzJ2RWF2YHFzVSVkWzRVV0dnYsZVeVpmSoJGSCRnVsx2cNZlWyNlaCd1UG92dUdlRXFWMS5UVtFzUZdFayZFMsNUTy40TT1GcVVmRGdkVrlzcNxmVwI2RwZlVFBXVU5GbrZFbJBjTWR2VWJDa0ZlMnFTTs9WMidEepRFM1YlVYxmdhJjVURWRkF2YspFdZZFZvZFbklFVqp0aWBjWFlleGdnVspEUlVkVhJ1MCdUVyY0bSdlT200V05EVwoVRWxWVxY1VGVVTWRGUVBTNzRFVGpUTxo1RhdUNpVlRaZ0VuZ0SWFjSzIWRad1UXhGdVxmTrFWMaFTVrRmThJDeYdVVkNXYyYVYU1GcXV2awdEVY50VTZEcHVVbxgWYUZESXxmVzZVbJBDVspVVlRlQWRlVVhnVwUzTW1WMoNmModlVYRmUi1mTzZlaGlWZEJkVWtWO3JlVwl3YGZFWXRUV5lFVSdkYFFDVT5GcVdVRaFXWXZ0TSZEcKJmRalmYwUzVWh0awYVVxAnVrZVYTBDc0lFbO9mVWRWNWdFcpZ1awFXVzA3VidkRQN2RxUlVspVVaZkVv10RJh3VVplTUNDaWdFWwNTTs5EUV1GeTJVV1ckVxo1VhxmW1IGMWpWVuJFdWhkQPJFMxgWYHRHWTRFbYRlVktUYspUMidEesNlMoh0VuxmSSxmSVRVbwZ1VFB3cUZlThFGbsZkTXRHahFjWHRFVaNXTXZ0MXxGaXZFbKllWHh2RSdkRPNGRG5UYthXWWNzb0YFMxglUrJlalpGaWZVb0dXTGxmNaBDZYdlRKNXVWJ0SWJjSMplRoZFZYhGWXdFcwYVMNJDVspVaOdkT1ZlbnRTTtJlVlVEZoNWMaRXWWR2VWZEZ2ImeGpWWVpUcWRkTzZ1axAVZFRWYSxGcWRFbo9mYGJVSNVlVpNmbCllVYlUMWdlRxFVbwh1UYJ0RVNjWHFGbaVzVXRXaX5mQ1VlM5MlYVFDVVpmQWV2arhnVs50ShxWV5NVVkNFVzIESXxmWDFWbWFGZFRmaNxmWXZlaCd1VGxGNaFDZVlVVwV0VsB3cSxGZ6RlaGdlUzgGSUZlVwIVMwxEVqpkTiJzZ4ZFbWtUTGJFcNdVMU1EMaNXWu50RNxGb5J2R0xmVEZESUpnThZ1axIjWFh2VjJDaIlVb4dnYWlFehpnROlVV1UnVzMGMNdkUhJVbwV1YxoEWVtGZTZFbkFTUtVDaWZkWGllaadlYWpkcjZkWVJFbaVlWG9WMiZlRFZVbxcFZygXWWhVRx0kROB3YHVjUXdlUzlVVNVTTGpVSX1GePRlModUWuZ0UWJTSw4kVkZVZrxmcZZlWLFGbaNjUWp1VUNjU0dVVodkVtZFaaVkVhV2asNHVVNXNWFjW450V0hWYyI1RaVFbP1kVZhXUXBnVlRlUWp1RGdUYsJ1dT1WMTNlbCllV6pVYNZlUwRWRkxWTqhmcW1GdT1kRWVTVWh2TWhkQYZlaSdkUrFjeTxmUWNmMoh1VXh3UiZkSWp1R4lGVzIlcW5Ga61UbSZVTWR2TjRkRWZ1a0NlVWRWMORlQTVFMwFnVUlEMhFjWyF2RxgVZUJkVaZFcvJFbwlnUrplTNVkSxZlbKNVTtZ0cNRlSr5Ub3hHVWNWMWZlU1ImeCRVYVpVcVtWMLZlMJdnYFp1VTZkS0VFM1skVG1keSpmRoRlM3l3VYRmdSxmToFGRClWZGx2cUV1YxYVMjJzYFZFahBDcxZVVW9UTVFDVadEeWVWVsNHVtx2UhFjU4VFbkdFZykTWWNjSDJWbSdlVrp1aNVlWYR1V4gXYxQ2MXZlVYdFbKdlVzgmWiVUMU5UVkFGZxYEWZdFahZlVNJjYEZkTWBTN1ZFWkNjVyIlcWtmVhNWVwhVWtR3UWxGZwEGROZFVrBXVWhEaSZVbJhXTGZVYjhFaIZVMKNkUHJVNWxGZXR2aaVlVGlVMhFjTwFFbS90VtdHeW5GaOZlVWVjYyQHbVNjUIdlbKdlYXZEWhZkWYdlRKRXWVRDeiZlS2IWMaNFVzgmRXtGZ3JFbOhWYFZlalpmRyRVV5ckUGplVOZlVoZFRGhFVx40TiVEM4NFVOdlUthWdZxmShJVbGZnTUJEaTFjSWZ1MVFTTGpEVT1GcW1kaSJnVtR3biZFZ10kRWx2Vth2RX5mSHJ1awcXUtB3VjxWS5l1V3hXTtFlMiRkROZleWZlVIxmdNZkTwJVbwNFVVBHWZpmQzJFbalUVtFDVXZ0b3lFVOdUTXZEUiRkSaRmM5cUVyY0bNdkS0c1V45kU6ZFWWpnW3J1VGJ3UtBnVSVFN4RlVOtmYGZVNTdFePFmVKJnVIZ0UWFjWzIWMoh1YrpUdaZkWXJVbRhnUsRmTipnRyZ1MwJlUyIVYjdUNTVVRwdEVY50dXZEcIVVbxgFVsplVUpmRzJ2RKREVsZVYWBjSZplVKdnYWJVTT1WMsFlMnhnVuZ0SNZkUZp1R0dVTqJlRWNjT3JVMwBTYHVTaVtWNxVFWGdlYFFDWRxmUWdFWohUWXhWYhFDZKJGRG5EZyI1cWhFZzI2VWN3VrZVYZRlRWVlaGZ1VGRWMTpmQSJmRwdUW6Z1RidkRQR2R0plTrBnRWFDa3JmVGFlWEZ0UWFDcxZlRsRjYXZkcNVFZsRWVZhHVV50dWFjW1cVVa5UVth2RZ5mQTZVMahWVshGWkZUS5RlVOtUYs5kMW1GeoR1MCh0Vsh2bTZkTVplRa9EZww2cUVVOXJGbkRjTGZFahZFcWVleaNnYHZFWPdFdaNWboVHVsJUYSxGcGRVb45UTGplNWhlRXJVbWNVUrJVaNZFbzlVV0dkUxA3VjVkWUdVbSdUWxIUYWtWM6FFbSZ1YqZlVZdFcDFGbkp0YFpFVktmWxZlbspVYyoUYjdUNUJWMKRHVW50UNZkV2MFVGdVVwAXcWRlSKJVMKB1YFRWYWtmSxplVwBjUy0UeWxmWX1kRal1VYhmbWFjUoFVbwdVTXdHeW1GdPFGbWVjY6JUaW5mQ0ZFSGNVTslFMhRkQWdlRaVEVW50ShxWU4NmRa5EVygHdXVFZzFmMWF2YHVzVVV0b5lFVSFWZsJFWVtGZTZVRwVkWEZkTidkRXFmRoZFZzQGWaVUOhJFbwhGVrRmTNd1Y3ZlVrFjUVVDWS5Gco1UMKdVWqZkcNxGbHNmRW90VEZFdVBTU4JVVxMzVshWVSFjSYdVV1clVVVTYjVkWYR2aaV1VsdWMhBTMwpVRWFmUVRTeVtWOTJmRkp1UthnUVtGcxVlaKpkVtpENiJDeYVGbGhUVx8GeSJjRV10V05EVwoVcXVlWTJmVOBnTXFjVTdFezRFVFBjVxoVNipnQqZ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0VxgVZHNWeZdFdXJ1VOFmWFpVaWBTNWdlVaRjVyY1bjdUNVRVVahkVr50TNFjVaN2R0hGVrpURahEZL1kVaNzYEJkWkRkRWplVStkUHlkMTxGZTNmM4llV6lVMSZlUyF2R4ZFZyg3VZpmVKJmRsBzYEJ0aWhkUIlFWG9kYFBTMTRlRWVGWOhEVW5UYhFjRzQlaK50YzEVeXhlS0IVMKVVVqZEaNFDczV1aKdVZsZlWlVEZVJ2RoNnVWZ1aNZVW3FFbSFmVwoUWaZlUhJmRSN1TVZ1VRFjWXZ1aoNlYW50cWtmWr1kVFlXVu50dNZEb5FFbo9kVFBXRZ5GZGZVMap3TUpkVkhFaIZ1RnFjYWZ1MUtmWXV1MSZ1Vsp1Ti1mVypVRWl2UwkFeZhFZXVGbVJzVrplThZkWHllbVhXYxoEVSpmRVZVVwZVWxI1biZkTM1UVW5UTFpUcXVlWT1UbGFXTWRWVOVVNzRFWKtmYspFSSxmVPRVbSZUWwQ3TN1mR5NGROZVZYRGdVdFahZFbFdnUWp1VUNjQyZleatkUs5UWaVkVp5EbZlnVs5UYXZkWZZFbShWYsplRZBDczJ1awc3UshmWW52Z5llVKRjYWJleTtGZTJWMKdlVzI1aTVUNTJ1aSpWZrp1cWtWOPJmRad1YHh3UWpmRIdlaatkVxokeX1WNXZVMKhVWXBXYhFTT4p1R4l2YwUzVWh0awYVVxg1VrpVYjVUN0V1a0NnVspVShRkSWFmVaNnVE50TiZkWQJ2R4hlTrBncWxmU3JmVkVzVsp1VkpnV0ZFbkFmVspVVldUMUNVR0gnVrRHMWZlVzUFVOpGVsB3RX1GO4FWMKNTVshGWOt2b3Z1RsBjUyYlNNdFdXFmMohlVFZVYWZlWh50VxIlVF9WeZVVOr1UMWlVZHFDVhZkWzV1astWTWlFeiFDZWR2MkRXWsp0ViZkUMNWRa5kUxk0dWZFaTJmVGNVUrJVakVlWXZ1a5cXYxQ2MXVlVTZ1RSd0Vr50RStWM65kVkZlVqZlcVJjRDFGbKZEVqZ0VhBDcWZFWkNjYXp0UaVkWpJFWBhHVXlzaNZkWGFWRk9EVrpURahFbyJ1axA1YHRHWkFDbGVFbStWTWtmeTxGZXVmRsZzVYhmSiZkUhRmRk9UTsZ0RWJDdPFGbWlXZHFTaVxmWzZVR0dnUrFDSVpmQWdlRKRXVWp0QSdkSxIFbadFVzIkcWNDZaJlVKVlWFpVYRBjWHRFWNFjVxY1VOdFdUlVVwVFVx40VSxmS5p1R1clUwAnRUdlRvJ1VOBlTVZlTWFDcxZlbwJkYsJFVWxmVONmVwdUWtZ0aSxGcHZVbw9kVWp0RXtGZXJlMKJ3VrJ1VWtGczZlRwdnYsp0VWtmWTNWbSVnVrh2chJjVWFWRapWVWpFSVBTNvNlRapVUtVjUVFDcGllVoFmUtpEaiZEZhN2aaFHVsZ1TSdURy0kVWdVZGxWVWZlWLZFbkFVVthnUWxmWHVlbOtkVWZ1MkBDZOl1VoZUWwgTMSVVMYdVbwdVZrZUdWZkTXZVVxgnUqZEaUNjQyZ1MkplUWpUVaVkWhFFMadEVY1UMWFjVX50V0RVWVpUcVtmVP1kVaJ3UsZlVkNDZ0lFbKdlYGJFTjdEeO5UVrdnVsdWMNZkRUJ1aShWZEJlRVNTT4FWMjJTZFR2UXdkUHd1aOdkUrFjeOZFZWZlaWJXVyY0QhxmSGRlaGdVYwAnVWhFZzI2VKNlVthXVTNjQHRVVkNVTGZVWV1WMSV1aKVUWuZ1RWxmWQN2R0hFZxwmRZFjSPZlRVpnVsR2VkpnVYZlVZFTYx4EaR1GcTdlVKdUVx40SWZlVzQmMxkWVsp1cWVEd3J1axgUVqJkVXZkS0VlVKNkUHpUMSxmWXR1MCJnVzQmWSZlSVpVRaFWUwo1RUhVTxYVMWdlTXRHVZVlSxV1aW9kVsplNaZEaXRmMklEVWp0aS1mSSNWRa5kUxk0dWZFaTJ2VSRlVrZVakpnQyV1a4gXYxQ2MXVlVTZ1RSd0Vr50RStWM65kVkZlVqZlcVJDdhJ1VNlXVVp1VhFDcWdlbONlYVVjVW1GeWRlM4dEVVR3UNZkVZVVbxIVVrpURZ5mVHZFbaB1YHRHWkFDbGVFbStmUsBHRStmWONmeWR3VYhmWWZlUyVVb0JlUVRDeW1GdLZlVWRDZyETaVZkWyZlRwdnYFFDUVpmQWdlRKRXVWp1QSdkVz0kRWNFVzIkcWNDZaJlVKVlWFpVYRBjWHRFWNFjVxY1VOdFdUlVVKFXVrZ1TNZlWyNFbWZFZzQGdZxmSXJmRSx0YFplTSFTS3ZlVa9UTyI1VRtmUsRmeCJXVrhDehFDZzcVVWNlVHFFeXRlQWJ1awcnVshGWkpnUGZlRwNUYs5kRUpmRXFGMwZlVuRmbTVUMPdVb0VFVspEWVtGZT1kRWlVVtFjUVtmSFllbWdkVspFUjdEdYRWMsZUVsJ1aSxGcEJ1aa50Y6ZFWWZVWxEWMOhWUtB3UkBTW4RlVKt2VGp1MaBDaORFbwJnVFVzdStWMIVlaCZ1VFVDSUxmSDJ1RKFzTVZ1USJDezZ1MkplUWpUWaVkVhFFMadEVY1UMWFjUI5kVWVVYxokcVZlVTJFbOR1UsZlVkNDZIRlVZFjUy4EUOVlVOZVMwFnVuBnQixmUUZFbW50YVlFeZVVO3FWMkNzVVZ1UWdkUHd1aOdkUrFjeOZFZWZlaWJXVyY0QhxmSGRlaGdVYxAXWWxmWvNVRx80VtRXVUxmSIV1aONlUsplSSpmRrZ1aKVkWYNGMWZlSQN2R0hFZxwmRVxmUrJFbwRkUrplTjpnV0ZVRjFjVWJlcV1GdSZlVKdUVxo0aXZkWzoFMo5EVsBncWVUNTJVMKRUYFp1VXVlS1plVkdlVVFzdV1GepRmeWZ0VuBnUNxmSVpVRaFWUwo1RUhVTxYVMWdlTXRHVZVlSxV1aW9UTWplcTxmVWR2MkRXWsp0aS1mS3J2R4xmVyc2dWtGbhJ1a1AnWHRHVjRlVWZVb0NnVsx2VlVEZqZ1RSdEV6F0dSdlSzMFbSF2UFpVRVxWU4JlMSFjUqZkTRNjQWdFbZVjVwUDVOVFZpFmRJlnVq50cXZEZ2EFVOdFVuhGSZ5GbO10VGZ3VthXVlVFbHVFbS9mYG5USXxmWORGM1UkVu50bWFDbvpVRaFmVXh3VZpmUPZFbSVTTGZlTWRlRYR1a1clYXZkehZkWWRWMGVnWGR2VSdVU5VVbxw2UzI0RX5mTDdlROVlWGplTXVEcXRFWkRjVWxWNkJTMUFGWCRXVWB3dSxGZQRVb4p1VIF0dadEdXJlVwxUVrR2VjJDaXZVMWtUTGZ0TT1GcURWV1MnVtlDMSFDcwEmRoRlVGp0cVZlQhZ1axMzYHVzVjhlQyl1VGNUYslFehJDesF1aaFnVuhmQXVUMRZ1aaF2YWpESV5mSz1UMalVVqpkTWBjWFllbnRjUWpFTjZEZhZ1MCdUVxA3SSZEcQNFbklGVyIVSW5mSvJmVOFHZHFDWNhUQ4ZVb58kVWp1MjBDZOZ1Moh0VuFUMWZlWoVlaOd1VGpEdVxmWLFGbOJjUrpVaUJDa0Z1MkplUspVWjdUMSNlRwNHVVNXMNxmUHVFbkhWYrpVcWBDbzJFbaJHZGRmVkNjTYRlVOdnYW5EeSpmSXFWMKdlVzI1bNFjVPNFbSVVZGZ0VZpWR3ZlVwhXZFRGWVtmSFpFRKtUTWpEVU1GcXNGWCJnVwkTYhFzY3JlaG5UUzIkVXxWW1YFM1AnVrZFajVkW0plVk9mVsRmWjRkQSF2RSNXVzwmSWFjSyRWRkFmTuhGSVFjUvJVbKlVTXRnTTtmWVZFWJFTTHZ0bldUMYN1V4dVWqFVNNZkVHVGRKlmVWp1RZhlSTJmVahWVshGWkhVQ4VlVotWYx4UNVRlRoF2MBd3VYRmdS1mUh50VxgVVFBHWZtWOPdlRWlXYHFDVihkUIlVMwNnUsR2MUxmVhdlRvdXWtBXYSdlRoNWRa5kVxokcWFDarN1RWh1UtB3VktGN4l1V0dnUWB3RjVkWUZ1RoNXVVJ1VStWM6RFbod1YygGdWJDdXFWMNhXYygXaUFjSxZlboJkYtJlcV1GdVRFSBhHVVlzbNZlWZFGROJFVrBXcWhEcP10VGBVZFZVYSNjQHVlMG9mUX5kNNdFdORFMaVkVsVVMWdlRV1kVkBFZWp0caZFZw0kRWl0UrpVVhVEcFl1a0dlVxoFahRkRXRGVVdnVHx2VS1WS510V0NVYwoFWWVkWXZlRkhWYEZUalZUV5Z1a5sUZsxWSVtGZTFmbSRnVxw2aidkS6R2R0ZFZzQGdZxmSXJmRSxEVthnTOZlVHZlbWFWYxYEWWxmVORGVGJXVs50RiZEZ1UVVoRlVHJ1VUhFcLJ1axonTXFjWlZEbyZ1RGdnYsVUeUdFeOFGMwVnVYR2MidlSwJVbwNFVWpFSVxmTTJlVallYHBnUXZEcGl1MwdlUxoETjdUMYRWMsZUWxo0ThxmR4JlaKdFVzIEdWBzYxYlVW92YHVzVXdlUzl1a1smYspVeVxGaOVlRwd0VthDeWZlSoFmRahFZVplVUZFZHJ1RJlnTXR3UhBTW5dFWoZnUspVYaZkWUVGRCZVWrR3aXZkW6F2RxgVYyIlRaRlQzZVbKZXUsJVYWtmS1lFbwtkVFFzdU1WMTNlMnhnVsx2dStWNUZ1aalWTrxGWVxGZ31kRrJDZGRGbX5Ga0Z1aSdlVrFjMadUNWNWMKhlVtZ0RhxmShJGRGdlYzIFdWhlS0I2VKdlVrpFaXpmRGVlM18WTxYVMjdEdoZlRZdXW61UMhFjWyFmRkFmVuJkVVFjUrJFbvl3YFplTOVVM1ZlbSdVYtZEWW1GeUZ1VSNXWrlzTixmV1Y1V0xWYsplcVtWO3J2RWRkVqJkVXV1b3p1RGNkUHpEeWpmST5ESBd3VYpENSFjTWpFRChWTwoFWW5mTz1UMWdVYGRWVhZkSHlFWk9kUsRGTTpmTXJFMwJXWrlzUhFjT3RVbxM1UycHeWxGbL10VOBnWHhHVktWN0V1akRjVWx2VlZEZYd1RSdkWUF0dSdlS6FVb1gVZEJlVZdFbhZlVNJjYHhHbWpHbydFWK9mYrVTUaZkWOJVV1gVVu50UiZEZaNVb4JlVrBXcW5mWT10VGZ3YEJkWl1GZIZVMoNlYGZUUTxGZpNlMSllVYlUMNdkRyFVbwhVTFRDeWpmUqJGbaRzTEp0aWhFaIlFWOdlYXZEWWxmUYVWb4gXWyY0QWZkU1YlVadlYzIEdXVlWXJlROhmWFpFbNFjWXZlaCN0VGxGNaFDZVlVV1EnVGx2aNZVWwQFbWVVZUF1dZFjSwImVSdHVrRmTZdFayZFMrVjVwEDWT1GcTR2V4NnWVR3bSFDczEVVoNlVFVTcWZFaLJWRxQ1VtBnWSRlVyl1V0dlUrBjMiRkRoRWMwVnVzQmbWVUMVRWRkh2YrVzcURlQXVGbWFTZEp0UWBjWFlleaNlYHZETkdEda50awZkVxg2diZlRRpFRGNlVxAXcWZEb0I2VGJnTXFjUVBTNzRFVWpUTWpVSWtmVOZ1Moh0VrZ1TiVEM3ZlbwZ1YWB3cVxGZLFGbNFzUqZEahNDaYZFWGRjUxoVYOdVMYVVRwhlVqJ1cNFjUWNmRWhWYGB3VWpnVr1kVaZnUsRWVj1Ga1R1Vs9kUH5EeVxGZONlM4JnVwg2clxmRvp1R4RVZrp1cZVVOzJVMwlkTVZFVXhkQ0ZFWKdkUrBzdR1GcXNGbJlXWXdHeN1WUyIGRG5kV6ZlVWhEb21kROBnUtB3UUVVW5ZlaCdlUGpVNVdVMWF2VSNnVIxmdSxmSQNmRkF2YuJ0RVFDZrJFbwh3Uqp0VTBDc2YFWFFTTGp1bhdEeVRmM3hHVVR3SWxmUzQFVOtWYxolcWhkSPJ2VGNlYE5kVlx2a4lFbKtUYsZFNTRlSTV2R5g0Vuxmbi1mSTN2R1glV6ZkVZtWO3JGbaBjUrJ1UhxmWGlFbW9UTWplcT1GeWV2V5YFVsJ0UiZkTZNGRG5EVycGeWxmVL1kVKRlVrpValZVV4l1VGdXYxwmRWxmVsdlaGhUW6JkWWtWMzImRaZ1YqZlcVJjRDFGbKNDVrpFWTNjQYZFSK9UTyIlcW1GdVN2a1QXWWp0cNFjV2cFVGlWVrBXcWhFaK1EbKRjYwQWYldFZ1lFbKdnYsRGeNdFdORVMwFnVYp0UidlRRVVb4JlVtFFeW5GcHFGbaRDZ6pkTV5mU0Z1RoNlVxoFahRkQWdFWnlnVrRDeWFTUw00V0dVVwkFeXhlS3JFbOhmWFpFaSVkW0ZlbktWTxwGSXtmVVFGVWRnVYR2TNZlWydVb1YlUuhGdZFjU3JmVSdXTVZlTNdUOZZ1Ms5WTsZEVkVEZpNmaWZkVzQ2bWxGba5UVWdVWXJ1VUFjTr1kVKRFVtBXVWFjSIllVCtmVsFlMiRkRORmMSJnVYtGMSZlUvR1aSlWYFRTeZhlTT1kRWZ1YHhnUWtmWFl1MkpkVtpENhFDZhZlM4dlWWB3RhxGZFZFba5kYr9meXhFbuJGbOFXTVR2aTtWNzpVVOtWTWZVSOZlVOFmVwZ0Vsp0ViZlWhJmRohlTs92dadkRDFGbSNDVsRmThNjQzZVRadnUs5UWOdVMXNVRwNHVVlzQXZkUINVb4hVYIJUdWxGbrJFbkJnWHVDWkNDZ0RFbW9mUt5kdSpmSTJmM4dlVshGMN1mUz10VxMFZrpFdV1WO31kVWNzVVZ1UWdkUHd1aOdkUrFjeOZFZWZleWZkVHx2RhxWS4J2R4lWUzE1dWV1ZxIlVSNlVthXVTNjQzRFVCNVTGVlMSxmVOZFMwFXVqZkRW1WS4V1V0hFZxwmRWxmULJ1RKRlWHh3UjBjWZd1aWdnVXZUcUtmUo10V3hXWYR2TWZFcYFVb14kYGplcWt2c4ZlVJhnWwo1VTZkS0ZlVoFmUX1kMjdEeTFmMoR3VWp1QTZkSVRVbwZ1VFB3cUZlThFGbsZkTXRHahFjWHRFVaNXTXV0dTxGahZ1aKlFVs5ENSFDcvR1ak5UTHNneWhlUvVWbShlUuBXaNFjSHlVb5QjVxAHeXxmWPd1a1EnV650diVUMMp1R1Y1YxoEWW12Z4ZFM5QlUrplTNZEcZZlVaRjYXpEWWtmWhN2a0kXVtVzcixmWwUVbxUVVrpURZ5mVHZFbaB1YHRHWkFDbGVFbStWTXVkeNRlQo1kVsZzVYhmSiZkUhRmRk9UTsZ0RWJDdPFGbsdEZGR2TXtGcVR1aWNlVxoFahdEeYZ1avhXVXh3VS1mSxIFbadFVzIkcWNDZaJlVKVlWFpVYRBjWYZlbONUZspVMR1WNVRFMKFnVqpkWNVVMz40V0ZlUrpVcZZlU0ImVSNlUtFTaRBzb4ZlbVFTTGZEcNZFZV5URZhXWXZ0dWZFb5d1aWNlVHJ1RXtmTHJ1axonTUpkVWpnVWlVV1clVrBTeVRlROJ2MCllVGp1RhtWNTZVb4Z1VrpFSWtmTXZlVkNTVXVzVWBDcxZFVa9UTXZEWjZkVaNGbwZUVsJ1aSxGcEJ1aa50Y6ZFWWZVWxEWMO9WVthnUTZlSzllbkdnYsp1RSxmUoZFVWhUWwkzUNtWMyRlaOZlVYhGdVJDbXZFbRJzTWZ1VhJzd5dFWoZnUsRGWTtmUhRFMadEVY1UMWFjVX50V0RVWVpUcV5GZPJFbkR1TWZVYjtmS2QlVO9mUt5kWWpmSoVmRWZkVsdWMNZkTXJFbSJVZFBTeV1GdzJmVsh0YFp1aXtmSFlVVSdlVxoleOZFZWZlaWJXVyY0QhxmSGRlaGdVYzIkVW5Gb2ZVV1YVYFplaVZlWIVFM182UGplWR1WNSVVMwZUWYNGeSZlTzIlaKZVZGxmRWFDa0ImVSVkVsR2VjpnVYZlVZFTYx4EaR1GcTJVV0gnVtR3SWZlVzQGMkpGVsBnRXtWOXJ2VKBlVrp1VXhUQ3Z1R4BjVwEjNVdVMO5ESBdnVGpFNWJjUTRVbwRVVGB3VUhlT31UMWl3VthHVhhkU0V1aW9UTWplcTxmVWR2MkRXWsp0aS1mSMVFbkN1UxAXRWxmVTJmVKNXZFRWYNxmRXZFbNFjVWR2MRVFaXZVbSZUWU50dStWM5plRoF2UHhWdVFjQhJmRJhnUthnTjtmSxZFWo5mUy40TaVkVqNWR1MHVUJ0USZlWxUVbxIVYIJFSahFc2J1axA1YHFjWSNjQHVVMvFTTtpENWZlWORGMKF3VVp1UN1mRoFVbwNlUVRDeW1GdLZlVWNDZyETaV1mUHl1aW9UTspkcVxmVYdVVJpnVsJ1ahFTT35kVWdFVzIFWWZkV0IVMOl1YHFjUVV0b5lFVSFWYsxmROdFdolVVKFXVrZ1TNZlWyNFbWZFZzQGdZxmSrJVbKZEVtFzUWJzZ3ZFWs5WTxYVWadEdT10V4gXVqV0dWZlUIJ2R4x2VqZESaZUU4FGMxAlUrJ1VWJDaIlVb4BjYW5kRUpmRXFGMwZlVYR2MidlSTZVb4V1UwUzcURlVaVGbWFzVrp1TUxmWHl1MW9kUwEDUjdEdVNmbCZUWx8WMiZlRFZFba5EZ6VVeWZVVxY1VGBnVthHVSVFN4ZVb0tkVWx2VNdFdOFWRwVUWu50SidlV1JGROdFZYJ0RUxmTDJ1RJd3VqZEahBTW5ZFWkplVWRWWNVFZs1ERCZVWrhTMWFjWZZVbwhWYzIFdVFDczJ2RKREVsZ1VlVkRJR1VsdlUWBXejdEesFVb4llVzYFNWFDbwZVb4VVTrxGSVtWO31EbsNTUXBHbXpmV0ZlRkFmYFFDTaZEaXNWboRXVwUzVNdUSyI2R4lWYthWdW5GbWFmMK1EVqZEaPdlTwd1V5IXZWhmdaNDbaJ2Rol1VpNGcLFVP9ciYokyXogyYlhXZ'))